plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "androidx.navigation.safeargs.kotlin"
    id 'kotlinx-serialization'
    id 'com.google.devtools.ksp'
    id 'com.google.dagger.hilt.android'
}

android {
    compileSdk 34
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/NOTICE', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/NOTICE.txt']
            excludes += ['META-INF/LICENSE.md', 'META-INF/LICENSE-notice.md']
        }
    }

    lint {
        baseline = file("lint-baseline.xml")
    }

    defaultConfig {
        applicationId "code.with.me.testroomandnavigationdrawertest"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    viewBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_18
        targetCompatibility JavaVersion.VERSION_18
    }

    kotlinOptions {
        jvmTarget = '18'
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.3'
    }

    ksp {
        arg("room.generateKotlin", "true")
        //убрать после миграции на hilt
//        arg("dagger.hilt.disableModulesHaveInstallInCheck", "true")

    }

    //bcs throws ": [ksp] InjectProcessingStep was unable to process 'db' because 'error.NonExistentClass' could not be resolved."
    androidComponents {
        onVariants(selector().all(), { variant ->
            afterEvaluate {
                // This is a workaround for https://issuetracker.google.com/301245705 which depends on internal
                // implementations of the android gradle plugin and the ksp gradle plugin which might change in the future
                // in an unpredictable way.
                project.tasks.getByName("ksp" + variant.name.capitalize() + "Kotlin") {
                    def dataBindingTask = (com.android.build.gradle.internal.tasks.databinding.DataBindingGenBaseClassesTask) project.tasks.getByName("dataBindingGenBaseClasses" + variant.name.capitalize())

                    ((org.jetbrains.kotlin.gradle.tasks.AbstractKotlinCompileTool) it).setSource(
                            dataBindingTask.sourceOutFolder
                    )
                }
            }
        })
    }
    namespace 'code.with.me.testroomandnavigationdrawertest'
}

ext {
    room_version = '2.6.1'
    viewmodel_version = '2.6.1'
    retrofit_version = '2.9.0'
    audiovisualizer_version = '2.2.5'
    nav_version = "2.7.7"
    lottieVersion = "6.1.0"

}

dependencies {
    implementation project(':feature:mainscreen')

    //navigation
//    implementation("androidx.navigation:navigation-compose:$nav_version")
    implementation libs.navigation.compose

    //rebugger
//    implementation("io.github.theapache64:rebugger:1.0.0-rc03")
    implementation libs.rebugger


    //hilt
//    implementation "com.google.dagger:hilt-android:2.51"
//    ksp "com.google.dagger:hilt-compiler:2.51"
//    implementation "androidx.hilt:hilt-work:1.2.0"
//    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    implementation libs.hilt
    implementation libs.hilt.compiler
    implementation libs.hilt.work
    implementation libs.hilt.nav.compose



//    implementation "androidx.work:work-runtime-ktx:2.8.1"
    implementation libs.android.work



    //viewmodel compose
//    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0"
    implementation libs.lifecycle.viewmodel.compose

    //compose
//    implementation(platform("androidx.compose:compose-bom:2024.04.01"))
    implementation "androidx.compose.material:material:1.3.0-rc01"
    implementation "androidx.compose.compiler:compiler:1.3.2"
    implementation "androidx.compose.ui:ui-tooling-preview:1.3.0-rc01"
    implementation 'androidx.activity:activity-compose:1.6.0'
    debugImplementation "androidx.compose.ui:ui-tooling:1.3.0-rc01"


    //lottie
    implementation "com.airbnb.android:lottie:$lottieVersion"


    implementation 'jp.wasabeef:richeditor-android:2.0.0'


    //audio vizualizer
    implementation 'com.github.lincollincol:amplituda:2.2.2'
    implementation 'com.github.massoudss:waveformSeekBar:5.0.2'


    //naviagtion
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    implementation 'androidx.test:core-ktx:1.5.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    androidTestImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'


    implementation('org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1')
    implementation('com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:1.0.0')


    //data store
    implementation("androidx.datastore:datastore-preferences:1.0.0")
    //transofrm for pciaso
    implementation 'jp.wasabeef:picasso-transformations:2.4.0'
    //room
    implementation "androidx.room:room-runtime:2.6.1"
    implementation "androidx.room:room-ktx:2.6.1"

    implementation 'androidx.navigation:navigation-fragment-ktx:2.6.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.6.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'com.google.android.material:material:1.9.0'
//    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.8.0'
    ksp "androidx.room:room-compiler:2.6.1"
//    kapt "androidx.room:room-compiler:$room_version"


    //colorpicker-quadflask
    implementation 'com.github.QuadFlask:colorpicker:0.0.15'

    //viewmodels && viewmodelscope
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${viewmodel_version}"

    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:${viewmodel_version}"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    //lifecyclescope
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${viewmodel_version}"

    //?? by viewModels
    implementation 'androidx.fragment:fragment-ktx:1.6.0'

    //gson
    implementation 'com.google.code.gson:gson:2.10.1'

    //moshi
    implementation 'com.squareup.moshi:moshi:1.15.0'

    //swiperrflayt
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    //picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    //glide
    implementation 'com.github.bumptech.glide:glide:4.15.1'


    //DoodleCanvasLib
    implementation "com.github.Luciferx86:DoodleCanvasLibrary:0.1.0-alpha3"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:${retrofit_version}"
    //retrofit gson converter
    implementation "com.squareup.retrofit2:converter-gson:${retrofit_version}"


    //gms
    implementation 'com.google.android.gms:play-services-auth:20.6.0'

    implementation 'androidx.core:core-ktx:1.10.1'
    //не повышать версию до 1.6.0! проблемы с nonnullable параметрами у gesturedetectorlistener
    implementation 'androidx.appcompat:appcompat:1.5.0'
//    implementation group: 'com.google.android.material', name: 'material', version: '1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'


    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}




apply plugin: "dev.shreyaspatil.compose-compiler-report-generator"
